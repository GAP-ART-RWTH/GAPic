<?xml version="1.0" encoding="UTF-8"?>

<Chapter Label="Chapter_Drawing_A_Planar_Graph">
<Heading>Drawing a planar graph</Heading>

Recall that a directed graph, or digraph for short, is a tuple <M>(V,E)</M>, where <M>V</M>
is a set and <M>E</M> is a subset of the cartesian product of <M>V</M> 
with itself. The elements of <M>V</M> are henceforth called <A>nodes</A> and the elements 
of <M>E</M> <A>Edges</A>. We will only consider simple digraphs, i.e. there are no loops 
contained in <M>E</M> (in particular <M>E</M> is an antireflexive relation).

<Section Label="Section_Plane_Embedding">
<Heading>Plane embedding of a planar graph</Heading>

<P/>
   Any planar digraph (see Digraphs package reference 6.6-1) can be embedded
   in the plane in such a way that edges only intersect in nodes.
   Removing the edges of the embedded planar graph from the plane <M>&RR;^2</M>
   divides the plane into several bounded and one unbounded regions. We call these
   regions the <A>faces</A> of the graph. It can be shown that a planar graph can
   be drawn in such a way that all edges are straight lines and edges only intersect
   in nodes. Since straight lines often are the most simple
   and aesthetical pleasing we would like our embeddings of planar graphs to have 
   straight edges. To obtain such a drawing, one can use the following method:
<P/>
   <ManSection Label="DrawStraightPlanarDigraphToTikz"> 
      <Prop Name="DrawStraightPlanarDigraphToTikz" Arg="graph, file, printRecord"
         Label="for IsPlanarDigraph, IsString, IsRecord"/>
      <Returns>a record</Returns>
      <Description>
         This function prints TikZ-code for LaTeX into the file called <K>file</K>. If 
         <K>graph</K> is a planar, connected digraph (and one defines the faces of the graph 
         <Ref Subsect="Subsection_DrawStraightPlanarDigraphToTikz_Faces"/>), 
         then <K>file</K> encodes a drawing of a plane embedding of <K>graph</K> with 
         straight edges which only intersect in Nodes 
         The drawing algorithm constructs the embedding by successively manipulating
         a convex drawing plane by updating vertex coordinates. Trying 
         to use the function for a digraph that is not planar and connected results in
         returning <K>fail</K>. Remark: Since the method is work in progress all edges, 
         in particular the directed ones, will be shown as undirected edges in the
         embedding. That directed edges will be drawn as directed arrows in the embedding
         will be updated soon.
      </Description>
   </ManSection>
   <List>
   <Item>
      If the given <K>file</K> does not end in <A>.tex</A> the ending <A>.tex</A>
      will be added to it.
   </Item>
   <Item>
      The given file will be overwritten without asking if it already exists. If
      you do not have permission to write to that file, this method will raise an
      error.
   </Item>
   <Item>
      The particulars of the drawing are determined by the argument <K>printRecord</K>, 
      which is a record.
      <!-- If this is not given, the default settings are used. -->
   </Item>
   <Item>
      The record <K>printRecord</K> will be modified and returned by this method. It contains the
      data to recreate the drawing of the graph.
   </Item>
   </List>

   <P/>
   There are parameters to change the output of this method. There are the
   following classes of parameters:
   <List>
      <Item>
         <A>Faces</A> (<Ref Subsect="Subsection_DrawStraightPlanarDigraphToTikz_Faces"/>):
         Define the faces of the planar graph. The parameter <A>nodesOfFaces</A> is obligatory
         to be changed, otherwise the method raises an error.
      </Item>
      <Item>
         <A>Appearance</A> (<Ref Subsect="Subsection_DrawStraightPlanarDigraphToTikz_Appearance"/>): 
         These parameters control the appearance of the drawing.
      </Item>
      <Item>
         <A>Output control</A> (<Ref Subsect="Subsection_DrawStraightPlanarDigraphToTikz_Output"/>):
         Modify the behaviour of the LaTeX-output and how much information is printed to the console.
      </Item>
   </List>         
   
   <P/>
   <Subsection Label="Subsection_DrawStraightPlanarDigraphToTikz_Faces">
      <Heading>Faces</Heading>
      This subsection covers the parameters that define the faces of the graph which
      should be drawn. Since the method is still work in process the user has to
      manually define all the faces of the graph by characterising their surrounding 
      nodes. The parameters are:
      <List>
         <Item>
            <A>nodesOfFaces</A>: Define all faces of the graph as characterised by their
            surrounding nodes.
         </Item>
         <Item>
            <A>infiniteFace</A>: Define the infinite face characterised by its surrounding
            nodes. The nodes of the infinite face will form the outer ring of the embedding.
         </Item>
      </List>
      We will exemplify them with the following graph in order to clarify how the parameters
      work:
<Log><![CDATA[ 
gap> graph := Digraph([[3,4,7], [3,4,8], [], [6], [3,7,8], [7,8], [], []]);;
gap> IsPlanarDigraph(graph);
true
gap> IsConnectedDigraph(graph);
true
]]></Log>
      This graph is a planar, connected graph and thus can be drawn with the method <K>DrawStraightPlanarDigraphToTikz</K>.
      Therefore, one must define the the graph's faces inside of a record. The file name will simply be
      <K>graph_embedding</K>.
      <List>
         <Item>
            <A>nodesOfFaces</A>: The faces that have to be defined are characterised by their surrounding
            nodes. That means that a face can be seen as a cycle of nodes. For <A>nodesOfFaces</A>
            one has to give a list of lists where <K>nodesOfFaces[i]</K> contains the nodes of face <K>i</K>
            ordered in a cycle as they occur when transversing the boundary of the face clockwise or anticlockwise.

            <P/>
<Log><![CDATA[ 
gap> printRecord := rec(nodesOfFaces := [[1,4,6,7], [1,4,2,3], 
> [2,3,5,8], [5,8,6,7], [2,4,6,8], [1,3,5,7]]);;
gap> DrawStraightPlanarDigraphToTikz(graph, "graph_embedding",
> printRecord);;
]]></Log>
               <Alt Only="HTML">&lt;img src="../images/DrawStraightPlanarDigraphToTikz_graph.png">&lt;/img></Alt>
               <Alt Only="LaTeX">\includegraphics{../images/DrawStraightPlanarDigraphToTikz_graph.pdf}</Alt>
               <Alt Only="Text">[Image omitted in text manual. Check doc/images/DrawStraightPlanarDigraphToTikz_graph.png]</Alt>
         </Item>
         <Item>
            <A>infiniteFace</A>: The infinite face of a plane embedding is the face whose area in the plane <M>&RR;^2</M> is infinite. 
            One can change the face that will be considered to be the infinite face. Any face can be chosen
            as the infinite face. If <A>infiniteFace</A> is not set up by the user one face with the most nodes will be used as a default.
            Using the same <K>printRecord</K> from previous example results in:

            <P/>
<Log><![CDATA[ 
gap> printRecord.infiniteFace := [1,4,2,3];;
gap> DrawStraightPlanarDigraphToTikz(graph, "graph_embedding",
> printRecord);;
]]></Log>
            <Alt Only="HTML">&lt;img src="../images/DrawStraightPlanarDigraphToTikz_graph_infiniteFace.png">&lt;/img></Alt>
            <Alt Only="LaTeX">\includegraphics{../images/DrawStraightPlanarDigraphToTikz_graph_infiniteFace.pdf}</Alt>
            <Alt Only="Text">[Image omitted in text manual. Check doc/images/DrawStraightPlanarDigraphToTikz_graph_infiniteFace.png]</Alt>
         </Item>
      </List>
   </Subsection>

   <Subsection Label="Subsection_DrawStraightPlanarDigraphToTikz_Appearance">
      <Heading>Appearance</Heading>
      This subsection covers the parameters that control the appearance of the drawing. The parameters are:
      <List>
         <Item>
            <A>scale</A>: Globally scales the picture. The default is 2.
         </Item>
         <Item>
            <A>spread</A>: Changes the amount of spread, i.e. how far apart the nodes are distributed inside the graph.
         </Item>
         <Item>
            <A>directedEdgesActive</A>: Toggle between directed or undirected representation of the graph. 
         </Item>
      </List>
      We will exemplify them with the following graph in order to clarify how the parameters
      work:
<Log><![CDATA[ 
gap> graph := Digraph([[3,4,7], [3,4,8], [], [6], [3,7,8], [7,8], [], []]);;
gap> printRecord := rec(nodesOfFaces := [[1,4,6,7], [1,4,2,3], 
> [2,3,5,8], [5,8,6,7], [2,4,6,8], [1,3,5,7]]);;
gap> DrawStraightPlanarDigraphToTikz(graph, "graph_embedding",
> printRecord);;
]]></Log>
      <Alt Only="HTML">&lt;img src="../images/DrawStraightPlanarDigraphToTikz_graph.png">&lt;/img></Alt>
      <Alt Only="LaTeX">\includegraphics{../images/DrawStraightPlanarDigraphToTikz_graph.pdf}</Alt>
      <Alt Only="Text">[Image omitted in text manual. Check doc/images/DrawStraightPlanarDigraphToTikz_graph.png]</Alt>
      <List>
         <Item>
            <A>scale</A>: Scales the produced TikZ-picture by <K>scale</K>. By default <K>scale</K> is set to 3. 
            Now one can change, to 4 for example, by:
<Log><![CDATA[ 
gap> printRecord.scale := 4;;
gap> DrawStraightPlanarDigraphToTikz(graph, "graph_embedding",
> printRecord);;
]]></Log>
            <Alt Only="HTML">&lt;img src="../images/DrawStraightPlanarDigraphToTikz_graph_scale.png">&lt;/img></Alt>
            <Alt Only="LaTeX">\includegraphics{../images/DrawStraightPlanarDigraphToTikz_graph_scale.pdf}</Alt>
            <Alt Only="Text">[Image omitted in text manual. Check doc/images/DrawStraightPlanarDigraphToTikz_graph_scale.png]</Alt>
         </Item>

         <Item>
            <A>spread</A>: Modifies the position of the nodes.
            The <K>spread</K> parameter can be chosen as a float in the interval (0, 1). 
            Choosing the parameter outside the interval results in an error. Choosing a number close
            to 1 modifies the nodes such that they tend to be placed torwards the boundary of the infinite face of the graph.
            Choosing a number close to 0 modifies the nodes such that they tend to be placed torwards the
            centre of the graph. The default <K>spread</K> is set at 0.5. Here are two examples with <K>spread</K>s 0.3 and 0.7:
<Log><![CDATA[ 
gap> printRecord.spread := 0.3;;
gap> DrawStraightPlanarDigraphToTikz(graph, "graph_embedding",
> printRecord);;
]]></Log>
            <Alt Only="HTML">&lt;img src="../images/DrawStraightPlanarDigraphToTikz_graph_spread_low.png">&lt;/img></Alt>
            <Alt Only="LaTeX">\includegraphics{../images/DrawStraightPlanarDigraphToTikz_graph_spread_low.pdf}</Alt>
            <Alt Only="Text">[Image omitted in text manual. Check doc/images/DrawStraightPlanarDigraphToTikz_graph_spread_low.png]</Alt>

<Log><![CDATA[ 
gap> printRecord.spread := 0.7;;
gap> DrawStraightPlanarDigraphToTikz(graph, "graph_embedding",
> printRecord);;
]]></Log>
            <Alt Only="HTML">&lt;img src="../images/DrawStraightPlanarDigraphToTikz_graph_spread_high.png">&lt;/img></Alt>
            <Alt Only="LaTeX">\includegraphics{../images/DrawStraightPlanarDigraphToTikz_graph_spread_high.pdf}</Alt>
            <Alt Only="Text">[Image omitted in text manual. Check doc/images/DrawStraightPlanarDigraphToTikz_graph_spread_high.png]</Alt>
         </Item>

         <Item>
            <A>directedEdgesActive</A>: By default <K>directedEdgesActive</K> is <K>true</K>. That means that edges will be
            represented as directed arrows as seen in the pictures. In the case that two nodes <K>i</K> and <K>j</K> are
            doubly connected with directed edges, i.e. <K>[i,j]</K> and <K>[j,i]</K> are edges of <K>graph</K>, the embedding
            shows two separated arrows from <K>i</K> to <K>j</K> and the other way around. <P/>
            If <K>directedEdgesActive</K> is set to <K>false</K> edges are represented as plane lines without any direction.
            In this case it is recommended to choose the graph <K>graph</K> in such a way that no pair of nodes is doubly 
            connected with directed edges (see above). The reason is that in this case the double edges will be represented 
            as one single plane line. This means that the drawing settings of one of the directed edges will be ignored.
            Let us look at the following examples:
<Log><![CDATA[ 
gap> graph := Digraph([[3,4,7], [3,4,8], [1], [6], [3,7,8], [4,7,8], 
> [], []]);;
gap> printRecord := rec(nodesOfFaces := [[1,4,6,7], [1,4,2,3], 
> [2,3,5,8], [5,8,6,7], [2,4,6,8], [1,3,5,7]]);;
gap> DrawStraightPlanarDigraphToTikz(graph, "graph_embedding",
> printRecord);;
]]></Log>
            <Alt Only="HTML">&lt;img src="../images/DrawStraightPlanarDigraphToTikz_graph_directedEdgesActive_true.png">&lt;/img></Alt>
            <Alt Only="LaTeX">\includegraphics{../images/DrawStraightPlanarDigraphToTikz_graph_directedEdgesActive_true.pdf}</Alt>
            <Alt Only="Text">[Image omitted in text manual. Check doc/images/DrawStraightPlanarDigraphToTikz_graph_directedEdgesActive_true.png]</Alt>
            <P/> 
            Now, we toggle <K>directedEdgesActive</K> off and we get
<Log><![CDATA[ 
gap> printRecord.directedEdgesActive := false;;
gap> DrawStraightPlanarDigraphToTikz(graph, "graph_embedding",
> printRecord);;
]]></Log>
            <Alt Only="HTML">&lt;img src="../images/DrawStraightPlanarDigraphToTikz_graph_directedEdgesActive_false.png">&lt;/img></Alt>
            <Alt Only="LaTeX">\includegraphics{../images/DrawStraightPlanarDigraphToTikz_graph_directedEdgesActive_false.pdf}</Alt>
            <Alt Only="Text">[Image omitted in text manual. Check doc/images/DrawStraightPlanarDigraphToTikz_graph_directedEdgesActive_false.png]</Alt>
            <P/>
            Here, we can see that the edges numbered 8 and 1 vanished. That is because we are looking at the undirected
            representation while having pairs of doubly connected nodes, namely <K>(1,3)</K> and <K>(4,6)</K>.
         </Item>
      </List>
   </Subsection>

   <Subsection Label="Subsection_DrawStraightPlanarDigraphToTikz_Output">
         <Heading>Output control</Heading>
         This subsection contains miscellaneous parameters to control the output of <K>DrawStraightPlanarDigraphToTikz</K>
         <Ref Sect="DrawStraightPlanarDigraphToTikz"/>. In order to modify the settings one has to change the following 
         parameters inside the argument <K>printRecord</K> which is a record. It contains the following options:
         <List>
            <Item>
               <A>compileLatex</A>: If this parameter is <K>true</K> (the default is <K>false</K>) the generated tex-file will be
               automatically compiled with <K>pdflatex</K>. In rare cases the compilation might run into a problem
               and stop. To abort such a computation, type 'x' and hit ENTER (this command is passed to
               <K>pdflatex</K>). If this happens, please notify the developers so it can be fixed in a later version.
            </Item>
            <Item>
               <A>latexDocumentclass</A>: Defines which documentclass is used for the output. The default is
               <K>article</K>. If the picture should not be cropped (and not be printed), <K>standalone</K> is recom-
               mended.
            </Item>
            <Item>
               <A>noOutput</A>: If this parameter is <K>true</K> (the default is <K>false</K>) the method 
               <K>DrawStraightPlanarDigraphToTikz</K> will produce no output on the console.
            </Item>
            <Item>
               <A>onlyTikzpicture</A>: If this parameter is <K>true</K> (the default is <K>false</K>) the generated
               tex-file will only consist of a <K>tikzpicture</K> without header (it is not possible to compile it 
               with LaTeX on its own).
            </Item>
         </List>
   </Subsection>
</Section>
</Chapter>